#ifndef TEXTURELOADINGTEST_H#define TEXTURELOADINGTEST_H#include <stdio.h>#include "Test.h"#include "../TiledImage.h"#include "../Animation.h"class TextureLoadingTest 	: public TestSuite::Test{public:	TextureLoadingTest()	{		validParams.proportions = sf::Vector2u(6, 5);		validParams.offset = sf::Vector2u(10, 10);		validParams.padding = sf::Vector2u(4, 5);					 		overlappingTileSet.push_back(sf::IntRect(5, 5, 105, 105));		overlappingTileSet.push_back(sf::IntRect(10, 11, 22, 28));		overlappingTileSet.push_back(sf::IntRect(0, 0, 64, 64));		overlappingTileSet.push_back(sf::IntRect(2002, 2003, 2010, 2011)); //out of bounds	}		void run() 	{		testTiledImage();		testAnimation();	}		void testTiledImage()	{		image.loadTiles(TileSet(validParams, 128, 128)); //12x12			test_(image.tiles[1].left == 20);		test_(image.tiles[12].top == 20);		test_(image.tiles.end() - image.tiles.begin() == 12*12);		test_(image.loadFromFile("test.png"));				test_(paramPicture.loadFromImage(image));				test_(overlappingTileSet[0].contains(overlappingTileSet[1].left, overlappingTileSet[1].top));	}		void testAnimation()	{		test_(anim.frameDuration == sf::Time::Zero);		//loading		image.loadTiles(TileSet(validParams, 128, 128));				image.loadFromFile("test.png");		test_(anim.loadFromImage(image));				if (anim.numFrames() == image.tiles.end() - image.tiles.begin())			succeed_();		else		{			fail_("Animation has the wrong number of frames.\n");			printf("NUMFRAMES: %d IMAGE: %d\n\n", anim.numFrames(), image.tiles.end() - image.tiles.begin());		}				test_(anim.frameDuration == sf::Time::Zero);				//setFrame(int)				//getFrame(sf::Time)		anim.frameDuration = sf::seconds(1.0f);		test_(anim.getFrame(sf::Time::Zero) == 0);		test_(anim.getFrame(sf::seconds(-0.5f)) == anim.numFrames()-1);		test_(anim.getFrame((sf::Int64)anim.numFrames()*anim.frameDuration) == 0);			anim.frameDuration = sf::seconds(-1.0f);		test_(anim.getFrame(sf::Time::Zero) == 0);		test_(anim.getFrame(sf::seconds(0.5f)) == anim.numFrames()-1);		test_(anim.getFrame((sf::Int64)anim.numFrames()*anim.frameDuration) == 0);			//Out of image tileset		image.loadTiles(TileSet(TileParams(sf::Vector2u(100, 24), sf::Vector2u(7,0), sf::Vector2u(4, 1)), image.getSize().x, image.getSize().y));			anim.loadFromImage(image, sf::seconds(0.5f));				anim.setFrame(0);		if (anim.getTextureRect().width != image.getSize().x-7)		{			fail_("Out-of-bounds image to animation conversion\n");			printf("Actual width was: %d\n\n", anim.getTextureRect().width);		}		else			succeed_();			}	private:	TileParams validParams;	TileSet overlappingTileSet;		TiledImage image;		Animation anim;		sf::Texture paramPicture;	sf::Texture overlappingPicture;	sf::Sprite spr;};	#endif // TEXTURELOADINGTEST_H